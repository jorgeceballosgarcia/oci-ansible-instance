- name: Create network
  block:
  - name: Create a VCN
    collections:
      - oracle.oci
    oci_network_vcn:
      compartment_id: "{{ instance_compartment }}"
      display_name: "{{ vcn_name }}"
      cidr_block: "{{ vcn_cidr_block }}"
    register: result
  - set_fact:
      vcn_id: "{{ result.vcn.id }}"
  - set_fact:
      vcn_ocid: "{{ result.vcn.id }}"

  - name: Create a new NAT Gateway
    collections:
      - oracle.oci
    oci_network_nat_gateway:
      compartment_id: "{{ instance_compartment }}"
      vcn_id: "{{ vcn_id }}"
      name: "{{ nat_name }}"
    register: result
  - set_fact:
      ng_id: "{{ result.nat_gateway.id }}"
  - set_fact:
      nat_gateway_ocid: "{{ result.nat_gateway.id }}"

  - name: Create route table to connect internet gateway to the VCN
    collections:
      - oracle.oci
    oci_network_route_table:
      compartment_id: "{{ instance_compartment }}"
      vcn_id: "{{ vcn_id }}"
      name: "{{ route_table_name }}"
      route_rules: "{{ route_table_rules }}"
      state: 'present'
    register: result
  - set_fact:
      rt_id: "{{ result.route_table.id }}"
  - set_fact:
      route_table_ocid: "{{ result.route_table.id }}"

  # Create a security list for allowing access to public instance
  # Use a jinja2 template of the ingress and egress security rules to generate
  # a templated version of the final rules.
  - name: create ingress rules yaml body
    template: src=./templates/ingress_security_rules.yaml.j2 dest=/tmp/instance_ingress_security_rules.yaml
  - name: create egress yaml body
    template: src=./templates/egress_security_rules.yaml.j2 dest=/tmp/instance_egress_security_rules.yaml
  # Load the variables defined in the generated files
  - name: load the variables defined in the ingress rules yaml body
    include_vars:
      file: /tmp/instance_ingress_security_rules.yaml
      name: loaded_ingress
  - name: print loaded_ingress
    debug:
      msg: "loaded ingress is {{loaded_ingress}}"
  - name: load the variables defined in the egress rules yaml body
    include_vars:
      file: /tmp/instance_egress_security_rules.yaml
      name: loaded_egress
  - name: print loaded_egress
    debug:
      msg: "loaded egress is {{loaded_egress}}"
  - name: Create a security list for allowing access to private instance
    collections:
      - oracle.oci
    oci_network_security_list:
      name: "{{ securitylist_name }}"
      compartment_id: "{{ instance_compartment }}"
      vcn_id: '{{ vcn_id }}'
      ingress_security_rules: "{{ loaded_ingress.instance_ingress_security_rules }}"
      egress_security_rules:  "{{ loaded_egress.instance_egress_security_rules }}"
    register: result
  - set_fact:
      instance_security_list_ocid: "{{ result.security_list.id }}"
  - set_fact:
      security_list_ocid: "{{ result.security_list.id }}"

  - name: Create a subnet to host the private instance. Link security_list and route_table.
    collections:
      - oracle.oci
    oci_network_subnet:
      availability_domain: "{{ instance_ad }}"
      cidr_block: "{{ subnet_cidr }}"
      compartment_id: "{{ instance_compartment }}"
      display_name: "{{ subnet_name }}"
      prohibit_public_ip_on_vnic: true
      route_table_id: "{{ rt_id }}"
      security_list_ids: [ "{{ instance_security_list_ocid }}" ]
      vcn_id: '{{ vcn_id }}'
    register: result
  - set_fact:
      instance_subnet_id: "{{ result.subnet.id }}"
  - set_fact:
      subnet_ocid: "{{ result.subnet.id }}"