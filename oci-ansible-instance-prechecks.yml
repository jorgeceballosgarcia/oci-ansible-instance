- name: Check pre-requisites
  fail:
    msg: "Environment variable {{ item }} not set. Please declare an environment variable with an appropriate value for the sample to work."
  when: item not in ansible_env
  loop:
    - "compartment_ocid"

- block:
  - name: Check pub key exists
    stat:
      path: "server.key.pub"
    register: result_pub
  
  - name: Check priv key exists
    stat:
      path: "server.key"
    register: result_priv

  - name: Check priv&pub
    fail:
      msg: "Keypar not exists. Please run generate-keys.sh"
    when: (not result_pub.stat.exists) or (not result_priv.stat.exists)

  # - name: Generate a Private Key
  #   openssl_privatekey:
  #     path: "server.key"
  #     type: RSA
  #     size: 2048
  # - name: Generate a Public Key
  #   openssl_publickey:
  #     path: "server.key.pub"
  #     privatekey_path: "server.key"
  #     format: OpenSSH
  # when: "'PUBLIC_SSH_KEY' not in ansible_env"

- set_fact:
    SSH_AUTHORIZED_KEYS: "{{ lookup('file',  'server.key.pub' ) }}"

- name: Search AD on oci
  block:
  - name: List availability_domains
    oci_identity_availability_domain_facts:
      compartment_id: "{{ instance_compartment }}"
    register: list_ads
    when:
      - "instance_ad is defined"
      - "instance_ad ==''"

  - name: Print
    ansible.builtin.debug:
      var: list_ads
    when:
      - "instance_ad is defined"
      - "instance_ad ==''"
  
  - name: Set instance_ad
    set_fact: 
      instance_ad: "{{ list_ads.availability_domains[0].name }}"
    when:
      - "instance_ad is defined"
      - "instance_ad ==''"

- name: Search images on oci
  block:
  - name: List images
    collections:
      - oracle.oci
    oci_compute_image_facts:
    # required
      compartment_id: "{{ instance_compartment }}"
      #display_name: "{{instance_os_build_filter}}"
      operating_system: "{{ instance_os }}"
      operating_system_version: "8"
      shape: "{{ instance_shape }}"
      sort_by: "TIMECREATED"
      sort_order: "DESC"
    register: list_images
    when:
      - "instance_image_ocid is defined"
      - "instance_image_ocid ==''"
  
  - name: Set instance_image_ocid
    set_fact: 
      instance_image_ocid: "{{ list_images.images[0].id }}"
    when:
      - "instance_image_ocid is defined"
      - "instance_image_ocid ==''"

  - name: debug
    debug:
      var: instance_image_ocid
